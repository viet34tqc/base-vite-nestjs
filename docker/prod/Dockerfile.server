FROM node:20-alpine AS builder
RUN corepack enable

WORKDIR /app
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages/server ./packages/server
COPY packages/shared ./packages/shared
# Install both dev and prod dependencies for pnpm build (needs Typescript which is dev dep) and npx prisma generate (needs prisma cli)
RUN pnpm install --frozen-lockfile --filter=server

WORKDIR /app/packages/server
COPY packages/server/prisma ./prisma
RUN npx prisma generate
RUN pnpm build

# Production image
FROM node:20-alpine
RUN corepack enable

WORKDIR /app

COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile --production --filter=server
COPY --from=builder /app/packages/server/dist ./dist
COPY --from=builder /app/packages/server/node_modules/@prisma ./node_modules/@prisma
# Copy Prisma schema for runtime use
COPY packages/server/prisma ./prisma

ENV NODE_ENV=production

COPY packages/server/entrypoint.sh .
RUN ls -la ./entrypoint.sh
RUN chmod +x entrypoint.sh

# Add a non-root user for security and switch to it
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
USER appuser
ENTRYPOINT ["./entrypoint.sh"]
CMD ["node", "dist/main.js"]
